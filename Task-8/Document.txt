Topic - Git Hooks to perform automated checks 
 
There will be multiple sample files available inside the .git/hooks. we will Create out own hooks.

Types of Hooks

1. Client Side Hooks

    1. pre-commit
    2. prepare-commit-msg
    3. commit-msg
    4. post-commit
    5. pre-rebase
    6. post-checkout
    7. post-merge

2. Server-side
    1. pre-recive
    2. update
    3. post-recive

Task Performed Using pre-commit

- pre-commit
    - This will hook will work before commit is made.
    - It is used to inspect the snapshot that is about to be committed, to see if it passes the pre-commit hook.
    - If the pre-commit hook returns a non-zero status(1), the commit is aborted.
    - This hook is used to check the code before committing the code.
    - I have used a pre-commit hooks to check any file contains Empty file and a file with sensitive information is trying to commit.

Steps Performed

1. Created a pre-commit hook inside the .git/hook pre-commit
    
    prints the message of Running a pre-commit check
    echo " Running pre-commit checks..."

    Get the list of staged files
    STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

    Check for empty files
    for FILE in $STAGED_FILES; do
    if [ ! -s "$FILE" ]; then
        echo " Error: Empty file detected - $FILE"
        exit 1
    fi
    done

    Define secret key patterns
    SECRET_PATTERNS="(API_KEY|SECRET|PASSWORD|TOKEN|AWS_ACCESS_KEY_ID|AWS_SECRET_ACCESS_KEY|PRIVATE_KEY|ENCRYPTION_KEY)=[A-Za-z0-9+/=]{20,}"

    # Check for secret keys in staged changes
    if git diff --cached | grep -E "$SECRET_PATTERNS"; then
    echo " Error: Potential secret key detected! Remove it before committing."
    exit 1
    fi

2. Created a Empty.txt file 

3. Then staged it and tried to commit. 

   Output:
    Running pre-commit checks...
    git commit "-m committing empty file"
    Error: Empty file detected Empty.txt

4. Added a some line of content and committed the Empty.txt file.

5. Created .env file with secret_keys and Tried to stage and commit it.

    Output:
    Running pre-commit checks...
    Error: Potential secret key detected! Remove it before committing.

6. Created a .gitignore file and added .env file inside it to avoid commit Error.

7. Then staged the changes and committed it.

    Output: 
    Running pre-commit checks...
    [main <commit-hash>] .gitignore added

